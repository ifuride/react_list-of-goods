{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","this","goods","visibleGoods","sort","g1","g2","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","isSortedDescending","className","type","classNames","onClick","setState","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA0CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,4CAME,WAAU,IAAD,OACP,EAGIC,KAAKJ,MAFPC,EADF,EACEA,WACAC,EAFF,EAEEA,SAGIG,EA3CH,SACLA,EADK,GAGJ,IADCH,EACF,EADEA,SAAUD,EACZ,EADYA,WAENK,EAAY,YAAOD,GAmBzB,OAjBAC,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQP,GACN,KAAKL,EAASa,SACZ,OAAOF,EAAGG,cAAcF,GAE1B,KAAKZ,EAASe,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OAExB,QACE,OAAO,MAITZ,GACFK,EAAaQ,UAGRR,EAoBSS,CAAkBjB,EAAiBM,KAAKJ,OAChDgB,EAAqBd,IAAaL,EAASM,OAASF,EAE1D,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,SAAU,UAAW,CACzC,WAAYjB,IAAaL,EAASa,WAEpCU,QAAS,WACP,EAAKC,SAAS,CAAEnB,SAAUL,EAASa,YANvC,iCAYA,wBACEQ,KAAK,SACLD,UAAWE,IAAW,SAAU,aAAc,CAC5C,WAAYjB,IAAaL,EAASe,SAEpCQ,QAAS,WACP,EAAKC,SAAS,CAAEnB,SAAUL,EAASe,UANvC,4BAYA,wBACEM,KAAK,SACLD,UAAWE,IAAW,SAAU,aAAc,CAC5C,YAA2B,IAAflB,IAEdmB,QAAS,WACP,EAAKC,SAAS,CAAEpB,YAAaA,KANjC,sBAYEe,GACA,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAAS,WACP,EAAKC,SAAS,CACZpB,YAAY,EACZC,SAAUL,EAASM,QANzB,sBAeJ,6BACGE,EAAMiB,KAAI,SAAAC,GACT,OAAO,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,eAxE5B,GAAyBC,IAAMC,WCzD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8ed9bcf5.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1, g2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return g1.localeCompare(g2);\n\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  render() {\n    const {\n      isReversed,\n      sortType,\n    } = this.state;\n\n    const goods = getReorderedGoods(goodsFromServer, this.state);\n    const isSortedDescending = sortType === SortType.NONE && !isReversed;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames('button', 'is-info', {\n              'is-light': sortType !== SortType.ALPHABET,\n            })}\n            onClick={() => {\n              this.setState({ sortType: SortType.ALPHABET });\n            }}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button', 'is-success', {\n              'is-light': sortType !== SortType.LENGTH,\n            })}\n            onClick={() => {\n              this.setState({ sortType: SortType.LENGTH });\n            }}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button', 'is-warning', {\n              'is-light': isReversed === false,\n            })}\n            onClick={() => {\n              this.setState({ isReversed: !isReversed });\n            }}\n          >\n            Reverse\n          </button>\n\n          {!isSortedDescending && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                this.setState({\n                  isReversed: false,\n                  sortType: SortType.NONE,\n                });\n              }}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {goods.map(good => {\n            return <li key={good} data-cy=\"Good\">{good}</li>;\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}